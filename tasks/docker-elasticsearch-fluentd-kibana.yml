- name: cria a network stack
  docker_network:
    name: stack
    driver: bridge
    
- name: cria o volume elasticsearchdata
  docker_volume:
    name: elasticsearchdata
    driver: local
    
- name: cria o volume kibanaconfig
  docker_volume:
    name: kibanaconfig
    driver: local    
    
- name: cria o container do elasticsearch
  docker_container:
    name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    restart: yes
    env:
      cluster.name: "log-cluster"
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    purge_networks: yes
    networks_cli_compatible: yes
    networks:
      - name: "stack"
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data
    ports:
     - "9200:9200"

# Fluentd

- name: cria o diret처rio /{{ workgroup_name }}/{{ docker_work_path }}/fluentd se ele n찾o existir
  file:
    path: /{{ workgroup_name }}/{{ docker_work_path }}/fluentd
    state: directory
    owner: root
    group: root
    mode: +rwx        

- name: criando Dockerfile /{{ workgroup_name }}/{{ docker_work_path }}/fluentd/Dockerfile
  template:
    src: "docker-fluentd-dockerfile.j2"
    dest: "/{{ workgroup_name }}/{{ docker_work_path }}/fluentd/Dockerfile"
    backup: yes
    mode: a+x
    owner: root
    group: root
    
- name: cria o diret처rio /{{ workgroup_name }}/{{ docker_work_path }}/fluentd/conf se ele n찾o existir
  file:
    path: /{{ workgroup_name }}/{{ docker_work_path }}/fluentd/conf
    state: directory
    owner: root
    group: root
    mode: +rwx        
    
- name: criando ficheiro /{{ workgroup_name }}/{{ docker_work_path }}/fluentd/conf/fluent.conf
  template:
    src: "fluent.conf.j2"
    dest: "/{{ workgroup_name }}/{{ docker_work_path }}/fluentd/conf/fluent.conf"
    backup: yes
    mode: a+x
    owner: root
    group: root    
    
- name: cria a imagem fluentd
  docker_image:
    name: fluentd-oi
    build:
      path: /{{ workgroup_name }}/{{ docker_work_path }}/images
      dockerfile: /{{ workgroup_name }}/{{ docker_work_path }}/fluentd/Dockerfile
      pull: yes
    push: no
    source: build
    
- name: cria o container fluentd
  docker_container:
    name: fluentd-1
    image: fluentd-oi:latest
    restart: yes
    purge_networks: yes
    networks_cli_compatible: yes
    networks:
      - name: "stack"
#    volumes:
#      - ./fluentd/conf:/fluentd/etc
    ports:
     - "24224:24224"
     - "24224:24224/udp"
