---

- name: cria o diretório {{docker_rabbitmq_directory_path}} se ele não existir
  file:
    path: '{{docker_rabbitmq_directory_path}}'
    state: directory
    owner: '{{docker_rabbitmq_files_owner}}'
    group: '{{docker_rabbitmq_files_group}}'
    mode: '{{docker_rabbitmq_files_mode}}'
    
- name: criando Dockerfile {{docker_rabbitmq_directory_path}}/Dockerfile
  template:
    src: 'Dockerfile.j2'
    dest: '{{docker_rabbitmq_directory_path}}/Dockerfile'
    backup: yes    
    owner: '{{docker_rabbitmq_files_owner}}'
    group: '{{docker_rabbitmq_files_group}}'
    mode: '{{docker_rabbitmq_files_mode}}'
    
- name: cria a imagem {{docker_rabbitmq_image_name}}
  docker_image:
    name: '{{docker_rabbitmq_image_name}}'
    build:
      path: '{{docker_folder_images_path}}'
      dockerfile: '{{docker_rabbitmq_directory_path}}/Dockerfile'
      pull: yes
    push: no
    source: build
    
- name: exclui o container {{docker_rabbitmq_container_name}}
  command: docker rm -f -v {{docker_rabbitmq_container_name}}
  ignore_errors: yes    
  
- name: cria o container {{docker_rabbitmq_container_name}}
  command: docker run -d 
    --hostname {{docker_rabbitmq_container_name}}
    --name {{docker_rabbitmq_container_name}}
    --log-driver={{docker_rabbitmq_log_driver}}
    {% for log_opt in docker_rabbitmq_log_opts %}
    --log-opt {{log_opt.name}}={{log_opt.value}}
    {% endfor %}
    --network {{docker_rabbitmq_network}}
    -e RABBITMQ_DEFAULT_USER={{docker_rabbitmq_default_user}} 
    -e RABBITMQ_DEFAULT_PASS={{docker_rabbitmq_default_pass}} 
    -p 1883:1883 
    -p 4369:4369 
    -p 5671:5671 
    -p 5672:5672 
    -p 15671:15671 
    -p 15672:15672 
    -p 15674:15674 
    -p 15675:15675 
    -p 25672:25672 
    -p 61613:61613 
    {{docker_rabbitmq_image_name}}:latest