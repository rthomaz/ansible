---

- name: instalando os pacotes necessários para o apt trabalhar com repositórios sobre HTTPS 
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - apt-transport-https 
    - ca-certificates
    - gnupg2
    - software-properties-common
  tags:
    - docker-ce
    
- name: adicionando apt signing key do repositório oficial do docker
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  tags:
    - docker-ce
    
- name: adicionando repositório oficial do docker para Debian Stretch
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
    state: present
  tags:
    - docker-ce
    
- name: indexando o novo repositório com o cache
  become: yes
  apt:
    name: "*"
    state: latest
    update_cache: yes
    force_apt_get: yes
  tags:
    - docker-ce
    
- name: atualizando a instalação do docker-ce
  apt:
    name: "docker-ce"
    state: latest
  tags:
    - docker-ce
    
- name: instalando o pacote python3-pip
  apt:
    name: "python3-pip"
  tags:
    - docker-ce
        
- name: rodando o comando pip3 install docker
  shell: pip3 install docker

# configurando o docker

- name: Incluir o usuário current no grupo docker
  shell: usermod -aG docker $USER

- name: criar diretório /etc/systemd/system/docker.service.d se ele não existir
  file:
    path: '/etc/systemd/system/docker.service.d'
    state: directory
    owner: root
    group: root
    mode: +rwx    

- name: definir acesso ao daemom do docker via tcp
  copy:
    src: "startup_options.conf"
    dest: "/etc/systemd/system/docker.service.d/startup_options.conf"
    backup: no
    owner: root
    group: root
    mode: 0644
  register: docker_service    

- name: recarregar o daemom e reinicar o serviço docker
  systemd:
    daemon_reload: yes
    state: restarted
    name: docker    
  when: docker_service.changed