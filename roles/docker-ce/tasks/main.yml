---

- name: instalando os pacotes necessários para o apt trabalhar com repositórios sobre HTTPS 
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - apt-transport-https 
    - ca-certificates
    - gnupg2
    - software-properties-common
#    - python-pip
    - python3-pip
  tags:
    - docker-ce
    
- name: adicionando apt signing key do repositório oficial do docker
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  tags:
    - docker-ce
    
- name: adicionando repositório oficial do docker para Debian Stretch
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
    state: present
  tags:
    - docker-ce
    
- name: indexando o novo repositório com o cache
  become: yes
  apt:
    name: "*"
    state: latest
    update_cache: yes
    force_apt_get: yes
  tags:
    - docker-ce
    
- name: atualizando a instalação do docker-ce
  apt:
    name: "docker-ce"
    state: latest
  tags:
    - docker-ce
    
- name: instalando o pacote python-pip
  apt:
    name: "python-pip"
  tags:
    - docker-ce
        
- name: rodando o comando pip install docker
  shell: pip install docker

# Configurando o ambiente

- name: cria o diretório /{{ workgroup_name }}/{{ docker_work_path }} se ele não existir
  file:
    path: /{{ workgroup_name }}/{{ docker_work_path }}
    state: directory
    owner: root
    group: root
    mode: +rwx    
    
- name: cria o diretório /{{ workgroup_name }}/{{ docker_work_path }}/images se ele não existir
  file:
    path: /{{ workgroup_name }}/{{ docker_work_path }}/images
    state: directory
    owner: root
    group: root
    mode: +rwx

- name: cria a network rthomaz-network
  docker_network:
    name: rthomaz-network
    internal: false
